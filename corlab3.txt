db.musician.insertMany(
	[
	  {
	    ssn: 'M001',
	    name: 'Nimesh',
	    address: 'Bangalore',
	    phone: 8745214523,
	    iuin: [1, 5],
	    sid: ['S005', 'S004','S001','S002','S003','S025'],
	    producedAlbums: ['A001']
	  },
	  {
	    ssn: 'M002',
	    name: 'Bharath',
	    address: 'Bangalore',
	    phone: 9874532145,
	    iuin: [3, 1, 2],
	    sid: ['S002', 'S001', 'S006','S007','S008','S024'],
	    producedAlbums: ['A002']
	  },
	  {
	    ssn: 'M003',
	    name: 'Kiran',
	    address: 'Mysore',
	    phone: 8745632145,
	    iuin: [1],
	    sid: ['S001', 'S002','S009','S010','S011','S023'],
	    producedAlbums: []
	  },
	  {
	    ssn: 'M004',
	    name: 'Kumar',
	    address: 'Tumkur',
	    phone: 9874521456,
	    iuin: [5, 3, 2, 1],
	    sid: ['S002', 'S001', 'S003','S012','S013','S014','S015','S016'],
	    producedAlbums: ['A003']
	  },
	  {
	    ssn: 'M005',
	    name: 'Chetan',
	    address: 'Delhi',
	    phone: 9876543210,
	    iuin: [2, 4, 6],
	    sid: ['S001', 'S003', 'S004','S017','S018','S019'],
	    producedAlbums: []
	  },
	  {
	    ssn: 'M006',
	    name: 'Priya',
	    address: 'Mumbai',
	    phone: 8765432109,
	    iuin: [1, 2, 3, 4, 5, 6],
	    sid: ['S004', 'S005','S020','S021','S022'],
	    producedAlbums: ['A004']
	  }
	]
);




db.instrument.insertMany(
[
  {
    iuin: 1,
    name: 'guitar',
    key: 'CDGA'
  },
  {
    iuin: 2,
    name: 'bass guitar',
    key: 'EADG'
  },
  {
    iuin: 3,
    name: 'flute',
    key: 'CDGF'
  },
  {
    iuin: 4,
    name: 'violin',
    key: 'GDAE'
  },
  {
    iuin: 5,
    name: 'drums',
    key: 'CDG'
  },
  {
    iuin: 6,
    name: 'keyboard',
    key: 'CDEFGABC'
  }
]);


db.album.insertMany(
	[
	  {
	    auin: 'A001',
	    title: 'Album 1',
	    date: '2001-5-23',
	    format: 'CD',
	    sid: [ 'S001', 'S002', 'S006' ],
	    producer: 'M001'
	  },
	  {
	    auin: 'A002',
	    title: 'Album 2',
	    date: '2010-9-13',
	    format: 'MC',
	    sid: [ 'S003', 'S004', 'S005' ],
	    producer: 'M002'
	  },
	  {
	    auin: 'A003',
	    title: 'Album 3',
	    date: '2015-7-18',
	    format: 'Vinyl',
	    sid: [ 'S009', 'S010', 'S011' ],
	    producer: 'M004'
	  },
	  {
	    auin: 'A004',
	    title: 'Album 4',
	    date: '2020-3-9',
	    format: 'Digital',
	    sid: [ 'S007', 'S008' ],
	    producer: 'M006'
	  },
	  {
	  	    auin: 'A005',
	  	    title: 'Album 5',
	  	    date: '2020-3-9',
	  	    format: 'Vinyl',
	  	    sid: [ 'S012', 'S013' ],
	  	    producer: 'M003'
	   },
	   {
	   	    auin: 'A006',
	   	    title: 'Album 6',
	   	    date: '2020-3-9',
	   	    format: 'Digital',
	   	    sid: [ 'S0014', 'S0015' ],
	   	    producer: 'M005'
	   },
	   {
	   	    auin: 'A007',
	   	    title: 'Album 7',
	   	    date: '2020-3-9',
	   	    format: 'CD',
	   	    sid: [ 'S016', 'S017','S018','S019' ],
	   	    producer: 'M006'
	   	},
	    {
		   	    auin: 'A008',
		   	    title: 'Album 8',
		   	    date: '2020-3-9',
		   	    format: 'Digital',
		   	    sid: [ 'S020', 'S021','S022','S023','S024','S025' ],
		   	    producer: 'M006'
		 }
	]);




db.song.insertMany([
  {
    sid: 'S001',
    stitle: 'Song 1',
    author: 'Author 1',
    musicians: ['M001', 'M002', 'M004', 'M005']
  },
  {
    sid: 'S002',
    stitle: 'Song 2',
    author: 'Author 2',
    musicians: ['M002', 'M003', 'M001', 'M004']
  },
  {
    sid: 'S003',
    stitle: 'Song 3',
    author: 'Author 3',
    musicians: ['M001', 'M004', 'M005']
  },
  {
    sid: 'S004',
    stitle: 'Song 4',
    author: 'Author 4',
    musicians: ['M001', 'M005', 'M006']
  },
  {
    sid: 'S005',
    stitle: 'Song 5',
    author: 'Author 5',
    musicians: ['M001', 'M006']
  },
  {
    sid: 'S006',
    stitle: 'Song 6',
    author: 'Author 6',
    musicians: ['M002']
  },
  {
    sid: 'S007',
    stitle: 'Song 7',
    author: 'Author 7',
    musicians: ['M002']
  },
  {
    sid: 'S008',
    stitle: 'Song 8',
    author: 'Author 8',
    musicians: ['M003']
  },
  {
    sid: 'S009',
    stitle: 'Song 9',
    author: 'Author 9',
    musicians: ['M003']
  },
  {
    sid: 'S010',
    stitle: 'Song 10',
    author: 'Author 10',
    musicians: ['M003']
  },
  {
    sid: 'S011',
    stitle: 'Song 11',
    author: 'Author 11',
    musicians: ['M003']
  },
  {
    sid: 'S012',
    stitle: 'Song 12',
    author: 'Author 12',
    musicians: ['M004']
  },
  {
    sid: 'S013',
    stitle: 'Song 13',
    author: 'Author 13',
    musicians: ['M004']
  },
  {
    sid: 'S014',
    stitle: 'Song 14',
    author: 'Author 14',
    musicians: ['M004']
  },
  {
    sid: 'S015',
    stitle: 'Song 15',
    author: 'Author 15',
    musicians: ['M004']
  },
  {
    sid: 'S016',
    stitle: 'Song 16',
    author: 'Author 16',
    musicians: ['M004']
  },
  {
    sid: 'S017',
    stitle: 'Song 17',
    author: 'Author 17',
    musicians: ['M005']
  },
  {
    sid: 'S018',
    stitle: 'Song 18',
    author: 'Author 18',
    musicians: ['M005']
  },
  {
    sid: 'S019',
    stitle: 'Song 19',
    author: 'Author 19',
    musicians: ['M005']
  },
  {
    sid: 'S020',
    stitle: 'Song 20',
    author: 'Author 20',
    musicians: ['M006']
  },
  {
    sid: 'S021',
    stitle: 'Song 21',
    author: 'Author 21',
    musicians: ['M006']
  },
  {
    sid: 'S022',
    stitle: 'Song 22',
    author: 'Author 22',
    musicians: ['M006']
  },
  {
    sid: 'S023',
    stitle: 'Song 23',
    author: 'Author 23',
    musicians: ['M003']
  },
  {
    sid: 'S024',
    stitle: 'Song 24',
    author: 'Author 24',
    musicians: ['M002']
  },
  {
    sid: 'S025',
    stitle: 'Song 25',
    author: 'Author 25',
    musicians: ['M001']
  }
]);


---------------------------------------------------------------------------------------
1.

db.musician.aggregate([
  {
    $lookup: {
      from: "song",
      localField: "sid",
      foreignField: "sid",
      as: "songs"
    }
  },
  {
    $unwind: "$songs"
  },
  {
    $lookup: {
      from: "album",
      localField: "songs.sid",
      foreignField: "sid",
      as: "albums"
    }
  },
  {
    $group: {
      _id: "$_id",
      MusicianName: { $first: "$name" },
      Songs: { $push: "$songs.stitle" },
      Albums: { $addToSet: "$albums.title" }
    }
  },
  {
    $project: {
      _id: 0,
      MusicianName: 1,
      Songs: 1,
      Albums: 1
    }
  }
]);

------------------------------------

2.
db.musician.find({producedAlbums:[]})



------------------------------------

3.

db.song.aggregate([
  {
    $match: {
      $expr: { $gt: [{ $size: "$musicians" }, 3] }
    }
  },
  {
    $project: {
      _id: 0,
      SongTitle: "$stitle",
      Author: "$author",
      Musicians: "$musicians"
    }
  }
])

--------------------------------------

4.

db.musician.aggregate([
  {
    $unwind: "$iuin" // Unwind the array of instruments
  },
  {
    $group: {
      _id: "$iuin",
      count: { $sum: 1 } // Count the number of musicians for each instrument
    }
  },
  {
    $lookup: {
      from: "instrument",
      localField: "_id",
      foreignField: "iuin",
      as: "instrumentDetails"
    }
  },
  {
    $project: {
      _id:0,
      instrument: "$instrumentDetails.name", // Get the instrument name
      averageMusicians: { $divide: ["$count", db.musician.count()] } // Calculate the average
    }
  }
]);

---------------------------------

5.

db.album.aggregate([
  {
    $lookup: {
      from: "musician",
      localField: "producer",
      foreignField: "ssn",
      as: "producerInfo"
    }
  },
  {
    $unwind: "$producerInfo"
  },
  {
    $match: {
      "producerInfo.iuin": { $all: [1, 3] }, // Check if producer plays both guitar and flute (1 for guitar, 3 for flute)
      $expr: {
        $gt: [
          {
            $size: "$sid" // Calculate the size of the 'sid' array directly
          },
          { $avg: { $map: { input: "$sid", as: "s", in: 1 } } } // Use '1' to represent each song
        ]
      } // Check if the producer produced more songs than the average
    }
  },
  {
    $project: {
      _id: 0,
      title: 1
    }
  }
]);

---------------------------------

6.

db.musician.find({"iuin":{$all:[1,2,3,4,5,8,9]}})

or

db.musician.find({"iuin":[1,2,3,4,5,8,9]});

db.musician.find({
  iuin: { $all: db.instrument.distinct("iuin") }
})


-----------------------------------------------
